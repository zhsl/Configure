# 修改tmux的默认shell
# set -g default-shell "${SHELL}"
# set -g default-command "${SHELL}"
set -g default-terminal "screen-256color"
# # set -g default-command "reattach-to-user-namespace -l zsh"
# 
# # 鼠标调整tmux格窗大小
# # setw -g mouse-resize-pane on
# # setw -g mouse-select-pane on
# # setw -g mouse-select-window on
# # setw -g mode-mouse on
# 
# 修改tmux快捷键前缀
# unbind C-b
# set -g prefix C-b
# 
# bind a reload key
bind R source-file ~/.tmux.conf ; display-message "Config reloaded.."

# 在文本间移动光标
# Use vim keybindings in copy mode
setw -g mode-keys vi
 
# 将复制下来的文本发送到系统的剪贴板中
# invoke reattach-to-user-namespace every time a new window/pane opens
# set-option -g default-command "reattach-to-user-namespace -l bash"
# 
# 让复制文本的操作更像 Vim
# start selecting text typing 'v' key (once you are in copy mode)
bind-key -t vi-copy v begin-selection
# copy selected text to the system's clipboard
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# 
# Remap window(pane?) navigation to vim
# 用 vim 的方式在窗格间移动光标
# unbind-key j
bind-key j select-pane -D
# unbind-key k
bind-key k select-pane -U
# unbind-key h
bind-key h select-pane -L
# unbind-key l
bind-key l select-pane -R
 
# 状态栏
# 颜色
set -g status-bg black
set -g status-fg white
#    
# 对齐方式
set-option -g status-justify centre
#    
# 左下角
set-option -g status-left '#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'
set-option -g status-left-length 20
#    
# 窗口列表
setw -g automatic-rename on
set-window-option -g window-status-format '#[dim]#I:#[default]#W#[fg=grey,dim]'
set-window-option -g window-status-current-format '#[fg=cyan,bold]#I#[fg=blue]:#[fg=cyan]#W#[fg=dim]'
#    
# 右下角
set -g status-right '#[fg=green][#[fg=cyan]%Y-%m-%d#[fg=green]]'

